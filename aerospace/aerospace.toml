# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []
after-startup-command = []

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
on-focus-changed = "move-mouse window-lazy-center"

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 10
inner.vertical =   10
outer.left =       10
outer.bottom =     10
outer.top =        10
outer.right =      10

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'


# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-1 = 'workspace 1'
alt-2 = 'workspace 2'
alt-3 = 'workspace 3'
alt-b = 'workspace B'
alt-d = 'workspace D'
alt-e = 'workspace E'
alt-n = 'workspace N'
alt-t = 'workspace T'
alt-w = 'workspace W'
alt-x = 'workspace X'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-1 = 'move-node-to-workspace 1'
alt-shift-2 = 'move-node-to-workspace 2'
alt-shift-3 = 'move-node-to-workspace 3'
alt-shift-b = 'move-node-to-workspace B'
alt-shift-d = 'move-node-to-workspace D'
alt-shift-e = 'move-node-to-workspace E'
alt-shift-n = 'move-node-to-workspace N'
alt-shift-t = 'move-node-to-workspace T'
alt-shift-w = 'move-node-to-workspace W'
alt-shift-x = 'move-node-to-workspace X'

alt-shift-f = 'fullscreen'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

alt-shift-r = 'mode resize'

[mode.resize.binding]
h = 'resize width -50'
j = 'resize height +50'
k = 'resize height -50'
l = 'resize width +50'
b = 'balance-sizes'


# See: https://nikitabobko.github.io/AeroSpace/commands#resize
minus = 'resize smart -50'
equal = 'resize smart +50'

enter = 'mode main'
esc = 'mode main'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

[[on-window-detected]]
if.app-id = 'com.google.Chrome'
run = "move-node-to-workspace B"

[[on-window-detected]]
if.app-id = 'org.mozilla.firefox'
run = "move-node-to-workspace B"

[[on-window-detected]]
if.app-id = 'company.thebrowser.Browser'
run = "move-node-to-workspace B"

[[on-window-detected]]
if.app-id = 'com.kagi.kagimacOS'
run = "move-node-to-workspace B"

[[on-window-detected]]
if.app-id = 'org.jkiss.dbeaver.core.product'
run = "move-node-to-workspace D"

[[on-window-detected]]
if.app-id = 'com.sourceforge.sqlitebrowser'
run = "move-node-to-workspace D"

[[on-window-detected]]
if.app-id = 'com.sublimetext.4'
run = "move-node-to-workspace E"

[[on-window-detected]]
if.app-id = 'dev.zed.Zed'
run = "move-node-to-workspace E"

[[on-window-detected]]
if.app-id = 'dev.zed.Zed-Preview'
run = "move-node-to-workspace E"

[[on-window-detected]]
if.app-id = 'com.luckymarmot.Paw'
run = "move-node-to-workspace N"

[[on-window-detected]]
if.app-id = 'com.github.wez.wezterm'
run = "move-node-to-workspace T"

[[on-window-detected]]
if.app-id = 'com.mitchellh.ghostty'
run = "move-node-to-workspace T"

[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'
run = "move-node-to-workspace W"

[[on-window-detected]]
if.app-id = 'com.hnc.Discord'
run = "move-node-to-workspace W"

[[on-window-detected]]
if.app-id = 'im.riot.app'
run = "move-node-to-workspace W"

[[on-window-detected]]
if.app-id = 'com.apple.dt.Xcode'
run = "move-node-to-workspace X"

[[on-window-detected]]
if.app-id = 'com.sublimemerge'
run = "move-node-to-workspace X"

